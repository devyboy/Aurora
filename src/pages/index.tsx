import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import { type RouterOutputs, api } from "~/utils/api";
import { LoadingPage } from "~/components/loading";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();
  if (!user) return null;

  return (
    <div className="flex w-full gap-3">
      <Image
        width={56}
        height={56}
        src={user.profileImageUrl}
        alt="profile picture"
        className="rounded-full"
        priority
      />
      <input
        placeholder="Type something..."
        className="grow bg-transparent outline-none"
      />
      <SignOutButton />
    </div>
  );
};

type PostType = RouterOutputs["posts"]["getAll"][number];

const PostItem = (props: { data: PostType }) => {
  const {
    data: { post, author },
  } = props;

  if (!author) {
    return null;
  }

  const createdAt = dayjs(post.createdAt).fromNow();
  const username = `@${author.username}`;

  return (
    <div className="flex gap-3 border-b border-slate-400 p-4">
      <div>
        <Image
          src={author.profileImageUrl}
          alt={`${username}'s profile picture`}
          height={44}
          width={44}
          className="rounded-full"
        />
      </div>
      <div>
        <div className="flex gap-1">
          <strong>{author.firstName}</strong>
          <div className="text-slate-500">
            <span>
              {username} &bull; {createdAt}
            </span>
          </div>
        </div>
        <div>{post.content}</div>
        <div></div>
      </div>
    </div>
  );
};

const Feed = () => {
  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) {
    return <LoadingPage />;
  }

  if (!data) {
    return <div>Something went wrong...</div>;
  }

  return (
    <div className="flex flex-col">
      {data.map((data) => (
        <PostItem key={data.post.id} data={data} />
      ))}
    </div>
  );
};

const Home: NextPage = () => {
  const { isLoaded, isSignedIn } = useUser();
  api.posts.getAll.useQuery();

  if (!isLoaded) {
    return <LoadingPage />;
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-400 md:max-w-2xl">
          <div className="border-b border-slate-400 p-4">
            {!isSignedIn && <SignInButton />}
            {isSignedIn && <CreatePostWizard />}
          </div>
          <Feed />
        </div>
      </main>
    </>
  );
};

export default Home;
